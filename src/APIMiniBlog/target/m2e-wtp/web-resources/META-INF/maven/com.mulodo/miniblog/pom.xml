<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mulodo</groupId>
	<artifactId>miniblog</artifactId>
	<name>APIMiniBlog</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<logback-version>1.0.13</logback-version>
		<spring-version>3.0.6.RELEASE</spring-version>
		<hibernate-version>3.6.10.Final</hibernate-version>
	</properties>
	<dependencies>
		<!-- Junit test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		
		<!-- JBoss RESTEasy -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.0.6.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-spring</artifactId>
			<version>3.0.6.Final</version>
		</dependency>
		<dependency>
	        <groupId>org.jboss.resteasy</groupId>
	        <artifactId>resteasy-jaxb-provider</artifactId>
	        <version>3.0.6.Final</version>
	    </dependency>
	    <dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<version>3.0.6.Final</version>
		</dependency>
	    <dependency>
	        <groupId>net.sf.scannotation</groupId>
	        <artifactId>scannotation</artifactId>
	        <version>1.0.2</version>
	    </dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>3.0.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>3.0.6.Final</version>
		</dependency>
		
		<!-- org.json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>

		<!-- Spring framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring-version}</version>
        </dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>

		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-version}</version>
		</dependency>
		
		<!-- mysql -->
 		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		
		<!-- Hibernate c3p0 connection pool -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate-version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		
		<!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>APIMiniBlog</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.15</version>
			    <configuration>
			        <!-- Sets the VM argument line used when unit tests are run. -->
			        <argLine>${surefireArgLine}</argLine>
			        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
			        <skipTests>${skip.unit.tests}</skipTests>
			        <!-- Excludes integration tests when unit tests are run. -->
			        <excludes>
			            <exclude>**/IT*.java</exclude>
			        </excludes>
			    </configuration>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <version>2.15</version>
			    <executions>
			        <!--
			            Ensures that both integration-test and verify goals of the Failsafe Maven
			            plugin are executed.
			        -->
			        <execution>
			            <id>integration-tests</id>
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the VM argument line used when integration tests are run. -->
			                <argLine>${failsafeArgLine}</argLine>
			                <!--
			                    Skips integration tests if the value of skip.integration.tests property
			                    is true
			                -->
			                <skipTests>${skip.integration.tests}</skipTests>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.7.2.201409121644</version>
			    <executions>
			        <!--
			            Prepares the property pointing to the JaCoCo runtime agent which
			            is passed as VM argument when Maven the Surefire plugin is executed.
			        -->
			        <execution>
			            <id>pre-unit-test</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>surefireArgLine</propertyName>
			            </configuration>
			        </execution>
			        <!--
			            Ensures that the code coverage report for unit tests is created after
			            unit tests have been run.
			        -->
			        <execution>
			            <id>post-unit-test</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
			            </configuration>
			        </execution>
			        <!-- The Executions required by unit tests are omitted. -->
			        <!--
			            Prepares the property pointing to the JaCoCo runtime agent which
			            is passed as VM argument when Maven the Failsafe plugin is executed.
			        -->
			        <execution>
			            <id>pre-integration-test</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>failsafeArgLine</propertyName>
			            </configuration>
			        </execution>
			        <!--
			            Ensures that the code coverage report for integration tests after
			            integration tests have been run.
			        -->
			        <execution>
			            <id>post-integration-test</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	</build>

</project>
